/* Custom Fonts */
@font-face {
    font-family: 'QatarMedium';
    src: url('fonts/Qatar_Medium.woff2') format('woff2'),
         url('fonts/Qatar_Medium.woff') format('woff');
    font-weight: 500;
    font-style: normal;
    font-display: swap; /* Ensures text is visible during font loading */
}

/* Base styles and variables */
:root {
    --primary-bg-color: #e0e7ee; /* Light mode background */
    --secondary-bg-color: #f8faff;
    --card-bg-color: #ffffff;
    --text-color: #333;
    --input-bg: #f0f4f8;
    --input-border: #ccd6e0;
    --button-gradient-start: #7f7fd5;
    --button-gradient-end: #86a8e7;
    --button-text-color: white;
    --shadow: rgba(0, 0, 0, 0.08);
    --language-switcher-bg: #f0f4f8;
    --mode-toggle-bg: #ccc;
    --success-color: #22c55e;
    --error-color: #ef4444;
    --warning-color: #f59e0b;
    --info-color: #3b82f6;

    /* Current active values (default to light mode) */
    --current-primary-bg-color: var(--primary-bg-color);
    --current-secondary-bg-color: var(--secondary-bg-color);
    --current-card-bg-color: var(--card-bg-color);
    --current-text-color: var(--text-color);
    --current-input-bg: var(--input-bg);
    --current-input-border: var(--input-border);
    --current-button-gradient-start: var(--button-gradient-start);
    --current-button-gradient-end: var(--button-gradient-end);
    --current-language-switcher-bg: var(--language-switcher-bg);
    --current-mode-toggle-bg: var(--mode-toggle-bg);
}

/* Dark Mode Variables */
body.dark-mode {
    --dark-primary-bg-color: #1a1a2e;
    --dark-secondary-bg-color: #16213e;
    --dark-card-bg-color: #0f3460;
    --dark-text-color: #e0e0e0;
    --dark-input-bg: #0c1a2f;
    --dark-input-border: #2c5282;
    --dark-button-gradient-start: #4a00e0;
    --dark-button-gradient-end: #8e2de2;
    --dark-language-switcher-bg: #0c1a2f;
    --dark-mode-toggle-bg: #4f5d75;

    --current-primary-bg-color: var(--dark-primary-bg-color);
    --current-secondary-bg-color: var(--dark-secondary-bg-color);
    --current-card-bg-color: var(--dark-card-bg-color);
    --current-text-color: var(--dark-text-color);
    --current-input-bg: var(--dark-input-bg);
    --current-input-border: var(--dark-input-border);
    --current-button-gradient-start: var(--dark-button-gradient-start);
    --current-button-gradient-end: var(--dark-button-gradient-end);
    --current-language-switcher-bg: var(--dark-language-switcher-bg);
    --current-mode-toggle-bg: var(--dark-mode-toggle-bg);
}

/* Base font for English and general text */
body {
    font-family: 'Philosopher', sans-serif; /* Default English font */
    background-color: var(--current-primary-bg-color);
    color: var(--current-text-color);
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    transition: background-color 0.4s ease, color 0.4s ease;
    overflow-x: hidden; /* Prevent horizontal scroll */
    position: relative; /* For background elements */
}

/* Apply Arabic font when HTML lang is 'ar' */
html[lang="ar"] body {
    font-family: 'QatarMedium', sans-serif; /* Arabic font */
}

/* Ensure the `dir` attribute on html is set by JS for consistency */
html {
    scroll-behavior: smooth;
}

/* Background elements */
.bg-gradient-primary, .bg-gradient-secondary {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    opacity: 0.8;
    transition: background 0.4s ease, opacity 0.4s ease;
}
.bg-gradient-primary {
    background: linear-gradient(180deg, var(--current-primary-bg-color), var(--current-secondary-bg-color));
}
.bg-gradient-secondary {
    background: linear-gradient(135deg, var(--current-secondary-bg-color) 0%, var(--current-primary-bg-color) 100%);
    opacity: 0.5;
}
body.dark-mode .bg-gradient-secondary {
    opacity: 0.7;
}

.bg-curvy-shape-left, .bg-curvy-shape-right {
    position: fixed;
    width: 250px;
    height: 250px;
    border-radius: 50%;
    opacity: 0.1;
    z-index: -1;
    filter: blur(50px);
    transition: background 0.4s ease, opacity 0.4s ease;
}

.bg-curvy-shape-left {
    top: -50px;
    left: -50px;
    background: var(--current-button-gradient-end);
}

.bg-curvy-shape-right {
    bottom: -50px;
    right: -50px;
    background: var(--current-button-gradient-start);
}

/* Top controls container - REVISED FOR ABSOLUTE POSITIONING OF CHILDREN */
.top-controls {
    position: fixed; /* Stays fixed at the top */
    top: 0;
    left: 0;
    width: 100%;
    height: 60px; /* Fixed height for the header bar */
    box-sizing: border-box;
    z-index: 100;
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.1);
    transition: background 0.4s ease;
    /* Important: Set position to relative so children can be absolute to it */
    position: relative;
    /* Add padding internally for spacing, not for children to inherit */
    padding: 0 1.5rem; /* Horizontal padding, no vertical padding needed for fixed height */
}

body.dark-mode .top-controls {
    background: rgba(0, 0, 0, 0.1);
}

/* Language switcher - ABSOLUTELY POSITIONED */
.language-switcher {
    display: flex;
    width: 80px;
    height: 36px;
    background-color: var(--current-language-switcher-bg);
    border-radius: 20px;
    position: absolute; /* Crucial: Absolute position */
    top: 50%; /* Vertically center */
    left: 1.5rem; /* Fixed distance from left edge */
    transform: translateY(-50%); /* Adjust for vertical centering */
    overflow: hidden;
    cursor: pointer;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px var(--shadow);
    /* Removed margin-left/right as position:absolute overrides it */
}

.language-switcher:hover {
    transform: translateY(-50%) translateY(-2px); /* Maintain vertical center, add hover effect */
    box-shadow: 0 5px 15px var(--shadow);
}

.lang-option {
    flex: 1;
    text-align: center;
    font-weight: 600;
    font-size: 12px;
    line-height: 36px;
    z-index: 2;
    position: relative;
    color: var(--current-text-color);
    transition: color 0.3s ease;
}

.lang-option.active {
    color: white; /* Color of active language text */
}

.slider {
    position: absolute;
    top: 2px;
    bottom: 2px;
    left: 2px;
    width: 36px;
    border-radius: 18px;
    background: linear-gradient(135deg, var(--current-button-gradient-start), var(--current-button-gradient-end));
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.language-switcher[data-active-lang="ar"] .slider {
    transform: translateX(40px); /* Moves slider to AR position */
}
.language-switcher[data-active-lang="en"] .slider {
    transform: translateX(0); /* Moves slider to EN position */
}

/* Site title - ABSOLUTELY CENTERED */
#site-title {
    font-family: 'Philosopher', sans-serif;
    font-size: clamp(1.5rem, 5vw, 2rem); /* Keep improved mobile font size */
    color: var(--current-text-color);
    text-align: center; /* Still center text within its own space */
    position: absolute; /* Crucial: Absolute position */
    top: 50%; /* Vertically center */
    left: 50%; /* Start from the horizontal middle */
    transform: translate(-50%, -50%); /* Adjust for both horizontal and vertical centering */
    width: auto; /* Allow content to dictate width */
    max-width: calc(100% - (1.5rem * 2 + 80px + 60px + 20px)); /* Calculate max-width to avoid overlap with buttons */
    /* Calculation: 100% - (left_padding + right_padding + lang_button_width + mode_button_width + some_gap) */
    white-space: nowrap; /* Keep text on one line */
    overflow: hidden; /* Hide overflow if text is too long */
    text-overflow: ellipsis; /* Add ellipsis if text overflows */
    transition: color 0.4s ease;
    text-shadow: 0 1px 2px var(--shadow);
    z-index: 1;
    margin: 0; /* Remove any lingering margins */
    direction: ltr; /* Always LTR for site title */
    unicode-bidi: isolate;
}

/* Dark mode toggle - ABSOLUTELY POSITIONED */
#mode-toggle {
    width: 60px;
    height: 36px;
    border-radius: 18px;
    background: var(--current-mode-toggle-bg);
    display: flex;
    align-items: center;
    padding: 4px;
    cursor: pointer;
    position: absolute; /* Crucial: Absolute position */
    top: 50%; /* Vertically center */
    right: 1.5rem; /* Fixed distance from right edge */
    transform: translateY(-50%); /* Adjust for vertical centering */
    overflow: hidden;
    box-shadow: 0 2px 8px var(--shadow);
    transition: all 0.3s ease;
    /* Removed margin-left as position:absolute overrides it */
}

#mode-toggle:hover {
    transform: translateY(-50%) translateY(-2px); /* Maintain vertical center, add hover effect */
    box-shadow: 0 5px 15px var(--shadow);
}

#mode-toggle .toggle-icon {
    width: 28px;
    height: 28px;
    background-color: white;
    border-radius: 50%;
    font-size: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: absolute; /* Relative to the toggle, not top-controls */
    left: 4px; /* Position inside its own parent */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

#mode-toggle.active .toggle-icon {
    transform: translateX(24px); /* Moves icon to the right for dark mode */
}

#mode-toggle .toggle-icon::before {
    content: "‚òÄÔ∏è"; /* Sun icon */
    font-size: 18px;
    transition: content 0.4s ease;
}

#mode-toggle.active .toggle-icon::before {
    content: "üåô"; /* Moon icon */
}

/* Main content container - Adjust padding for fixed header */
.main-content {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    box-sizing: border-box;
    z-index: 1;
    /* This padding should match the height of the fixed header plus any desired gap */
    padding-top: calc(60px + 20px); /* Header height (60px) + 20px extra space */
}

.container {
    background-color: var(--current-card-bg-color);
    border-radius: 20px;
    padding: 2.5rem;
    box-shadow: 0 10px 30px var(--shadow);
    text-align: center;
    max-width: 400px;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: background-color 0.4s ease, box-shadow 0.4s ease;
    position: relative;
}

.logo {
    width: 120px;
    height: 120px;
    margin-bottom: 1.5rem;
    object-fit: contain;
}

#form-title {
    font-size: clamp(1.5rem, 4vw, 2rem);
    color: var(--current-text-color);
    margin-bottom: 1.5rem;
    font-weight: 700;
    transition: color 0.4s ease;
}

input[type="text"] {
    width: calc(100% - 2rem);
    padding: 0.8rem 1rem;
    margin-bottom: 1.5rem;
    border: 1px solid var(--current-input-border);
    border-radius: 10px;
    background-color: var(--current-input-bg);
    color: var(--current-text-color);
    font-size: 1rem;
    transition: border-color 0.4s ease, background-color 0.4s ease, color 0.4s ease;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
    text-align: center;
}

input[type="text"]:focus {
    outline: none;
    border-color: var(--button-gradient-end);
    box-shadow: 0 0 0 3px rgba(134, 168, 231, 0.3);
}

button {
    width: 100%;
    padding: 1rem;
    background: linear-gradient(90deg, var(--current-button-gradient-start), var(--current-button-gradient-end));
    color: var(--button-text-color);
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    position: relative;
    overflow: hidden;
}

button:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

button:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background: linear-gradient(90deg, #ccc, #bbb);
}

button.loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin-top: -10px;
    margin-left: -10px;
    border: 2px solid #fff;
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
}

button.loading span {
    visibility: hidden;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Status and Adhkar messages */
#statusMessage, #adhkarMessage {
    margin-top: 1rem;
    padding: 0.75rem 1rem;
    border-radius: 12px;
    font-weight: 500;
    font-size: 0.9rem;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    line-height: 1.4;
    min-height: 20px;
    max-width: 100%;
    word-wrap: break-word;
    text-align: center;
}

html[lang="ar"] #statusMessage, html[lang="ar"] #adhkarMessage, html[lang="ar"] input[type="text"]::placeholder, html[lang="ar"] button {
    font-family: 'QatarMedium', sans-serif;
}
html[lang="en"] #statusMessage, html[lang="en"] #adhkarMessage, html[lang="en"] input[type="text"]::placeholder, html[lang="en"] button {
    font-family: 'Philosopher', serif;
}

#statusMessage.show, #adhkarMessage.show {
    opacity: 1;
    transform: translateY(0);
}

#statusMessage.success, #adhkarMessage.success {
    background-color: rgba(34, 197, 94, 0.1);
    color: var(--success-color);
    border: 1px solid rgba(34, 197, 94, 0.2);
}

#statusMessage.error, #adhkarMessage.error {
    background-color: rgba(239, 68, 68, 0.1);
    color: var(--error-color);
    border: 1px solid rgba(239, 68, 68, 0.2);
}

#statusMessage.warning, #adhkarMessage.warning {
    background-color: rgba(245, 158, 11, 0.1);
    color: var(--warning-color);
    border: 1px solid rgba(245, 158, 11, 0.2);
}

#statusMessage.info, #adhkarMessage.info {
    background-color: rgba(59, 130, 246, 0.1);
    color: var(--info-color);
    border: 1px solid rgba(59, 130, 246, 0.2);
}

/* Footer styling */
.footer {
    padding: 1.5rem 1rem;
    background: linear-gradient(to top, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
    backdrop-filter: blur(5px);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: auto;
    transition: background 0.4s ease;
    z-index: 1;
}

body.dark-mode .footer {
    background: linear-gradient(to top, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));
    border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.footer-content {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    color: var(--current-text-color);
    font-size: 0.9rem;
    transition: color 0.4s ease;
    text-align: center;
}

.footer-item {
    display: flex;
    align-items: center;
    gap: 5px;
    text-align: center;
}

.footer-item .emoji {
    font-size: 1.2em;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    /* Top controls height and padding */
    .top-controls {
        height: 50px; /* Slightly smaller height on mobile */
        padding: 0 1rem; /* Adjust horizontal padding for mobile */
    }

    /* Site title font size on smaller screens */
    #site-title {
        font-size: clamp(1.4rem, 4.5vw, 1.8rem); /* Adjust font for mobile */
        /* Recalculate max-width for mobile */
        max-width: calc(100% - (1rem * 2 + 80px + 60px + 20px));
        /* Calculation: 100% - (left_padding + right_padding + lang_button_width + mode_button_width + some_gap) */
    }

    /* Main content padding adjustment for smaller header */
    .main-content {
        padding-top: calc(50px + 20px); /* Header height (50px) + 20px extra space */
    }

    .container {
        padding: 1.5rem;
    }

    .logo {
        width: 100px;
        height: 100px;
    }

    #form-title {
        font-size: clamp(1.2rem, 5vw, 1.8rem);
    }

    input[type="text"], button {
        padding: 0.7rem 0.9rem;
        font-size: 1rem;
    }

    #statusMessage, #adhkarMessage {
        font-size: 0.85rem;
        padding: 0.6rem 0.8rem;
    }

    .footer-content {
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }
}

@media (max-width: 480px) {
    .container {
        padding: 1rem;
    }

    .logo {
        width: 80px;
        height: 80px;
    }
}
